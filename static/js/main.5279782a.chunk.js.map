{"version":3,"sources":["components/Card.js","components/Form.js","components/Namefilter.js","components/Showcards.js","components/Rarefilter.js","components/Trunfofilter.js","App.js","index.js"],"names":["Card","this","props","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","className","src","alt","React","Component","Form","onInputChange","isSaveButtonDisabled","onSaveButtonClick","hasTrunfo","htmlFor","id","name","onChange","type","value","checked","disabled","onClick","Namefilter","namefilter","filterButton","placeholder","Showcards","cards","deleteCard","map","card","Rarefilter","rarefilter","Trunfofilter","trunfofilter","App","filledData","state","verify","n1","parseInt","n2","n3","target","setState","hasTrunfoVerify","some","saveNewCard","event","preventDefault","before","undeletedCards","filter","showFiltered","rareFiltered","filteredCards","nameFiltered","trunfoFiltered","hasFilered","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5279782a.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css';\nimport PropTypes from 'prop-types';\n\nclass Card extends React.Component {\n  render() {\n    const { cardName, cardDescription, cardAttr1, cardAttr2, cardAttr3, cardImage,\n      cardRare, cardTrunfo } = this.props;\n    return (\n      <div className=\"card-container\">\n        <div className=\"card-border\">\n          <div className=\"cardName\" data-testid=\"name-card\"><h2>{ cardName }</h2></div>\n          <img src={ cardImage } alt={ cardName } data-testid=\"image-card\" />\n          <div className=\"cardDescription\" data-testid=\"description-card\">\n            { cardDescription }\n          </div>\n          <section className=\"attr-section-container\">\n            <div className=\"attr-container\">\n              <p>atrib. 1</p>\n              <p data-testid=\"attr1-card\">{ cardAttr1 }</p>\n            </div>\n            <div className=\"attr-container\">\n              <p>atrib. 2</p>\n              <p data-testid=\"attr2-card\">{ cardAttr2 }</p>\n            </div>\n            <div className=\"attr-container\">\n              <p>atrib. 3</p>\n              <p data-testid=\"attr3-card\">{ cardAttr3 }</p>\n            </div>\n            <div className=\"cardRare\" data-testid=\"rare-card\">{ cardRare }</div>\n          </section>\n          <div className=\"trunfo-card\">\n            {(cardTrunfo)\n              ? <h2 data-testid=\"trunfo-card\">Super Trunfo</h2> : <p> </p>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.string.isRequired,\n  cardAttr2: PropTypes.string.isRequired,\n  cardAttr3: PropTypes.string.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport './form.css';\nimport PropTypes from 'prop-types';\n\nclass Form extends React.Component {\n  render() {\n    const { cardName, cardDescription, cardAttr1, cardAttr2, cardAttr3, cardImage,\n      cardRare, cardTrunfo, onInputChange, isSaveButtonDisabled,\n      onSaveButtonClick, hasTrunfo } = this.props;\n\n    return (\n      <form>\n        <label htmlFor=\"cardName\">\n          Nome da carta\n          <input\n            data-testid=\"name-input\"\n            id=\"cardName\"\n            name=\"cardName\"\n            onChange={ onInputChange }\n            type=\"text\"\n            value={ cardName }\n          />\n        </label>\n        <label htmlFor=\"description-input\">\n          descrição da carta\n          <textarea\n            id=\"description-input\"\n            type=\"textarea\"\n            data-testid=\"description-input\"\n            name=\"cardDescription\"\n            onChange={ onInputChange }\n            value={ cardDescription }\n          />\n        </label>\n        <label htmlFor=\"attr1-input\">\n          Inserir o primeiro atributo da carta\n          <input\n            id=\"attr1-input\"\n            type=\"number\"\n            data-testid=\"attr1-input\"\n            name=\"cardAttr1\"\n            onChange={ onInputChange }\n            value={ cardAttr1 }\n          />\n        </label>\n        <label htmlFor=\"attr2-input\">\n          Inserir o segundo atributo da carta\n          <input\n            id=\"attr2-input\"\n            type=\"number\"\n            data-testid=\"attr2-input\"\n            name=\"cardAttr2\"\n            onChange={ onInputChange }\n            value={ cardAttr2 }\n          />\n        </label>\n        <label htmlFor=\"attr3-input\">\n          Inserir o terceiro atributo da carta\n          <input\n            id=\"attr3-input\"\n            type=\"number\"\n            data-testid=\"attr3-input\"\n            name=\"cardAttr3\"\n            onChange={ onInputChange }\n            value={ cardAttr3 }\n          />\n        </label>\n        <label htmlFor=\"image-input\">\n          Inserir o caminho para imagem da carta\n          <input\n            id=\"image-input\"\n            type=\"text\"\n            data-testid=\"image-input\"\n            name=\"cardImage\"\n            onChange={ onInputChange }\n            value={ cardImage }\n          />\n        </label>\n        <label htmlFor=\"rare-input\">\n          Inserir raridade da carta\n          <select\n            id=\"rare-input\"\n            type=\"text\"\n            data-testid=\"rare-input\"\n            name=\"cardRare\"\n            onChange={ onInputChange }\n            value={ cardRare }\n          >\n            <option>normal</option>\n            <option>raro</option>\n            <option>muito raro</option>\n          </select>\n        </label>\n        <label id=\"trunfo-input-container\" htmlFor=\"trunfo-input\">\n          Selecionar se a carta for o Super Trunfo\n          <div>\n            {\n              (!hasTrunfo)\n                ? (\n                  <input\n                    className=\"trunfo-input\"\n                    type=\"checkbox\"\n                    data-testid=\"trunfo-input\"\n                    name=\"cardTrunfo\"\n                    onChange={ onInputChange }\n                    checked={ cardTrunfo }\n                  />\n                )\n                : (<div>Você já tem um Super Trunfo em seu baralho</div>)\n            }\n          </div>\n        </label>\n        <div className=\"button-container\">\n          <button\n            id=\"save-button\"\n            type=\"submit\"\n            data-testid=\"save-button\"\n            disabled={ isSaveButtonDisabled }\n            onClick={ onSaveButtonClick }\n          >\n            Salvar\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.string.isRequired,\n  cardAttr2: PropTypes.string.isRequired,\n  cardAttr3: PropTypes.string.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n  hasTrunfo: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  isSaveButtonDisabled: PropTypes.bool.isRequired,\n  onSaveButtonClick: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Namefilter extends React.Component {\n  render() {\n    const { namefilter, onInputChange, filterButton } = this.props;\n\n    return (\n      <div>\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          name=\"namefilter\"\n          placeholder=\"Buscar pelo nome\"\n          onChange={ onInputChange }\n          value={ namefilter }\n        />\n        <button type=\"button\" onClick={ filterButton }>Buscar</button>\n      </div>\n    );\n  }\n}\n\nNamefilter.propTypes = {\n  namefilter: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  filterButton: PropTypes.func.isRequired,\n};\n\nexport default Namefilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\n\nclass Showcards extends React.Component {\n  render() {\n    const { cards, deleteCard } = this.props;\n\n    return (\n      cards.map((card) => (\n        <div key={ card.cardImage } className=\"card-removeButton-container\">\n          <Card\n            cardName={ card.cardName }\n            cardDescription={ card.cardDescription }\n            cardAttr1={ card.cardAttr1 }\n            cardAttr2={ card.cardAttr2 }\n            cardAttr3={ card.cardAttr3 }\n            cardImage={ card.cardImage }\n            cardRare={ card.cardRare }\n            cardTrunfo={ card.cardTrunfo }\n          />\n          <button\n            id={ card.cardImage }\n            type=\"reset\"\n            onClick={ deleteCard }\n            data-testid=\"delete-button\"\n          >\n            Excluir\n          </button>\n        </div>\n      ))\n    );\n  }\n}\n\nShowcards.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteCard: PropTypes.func.isRequired,\n};\n\nexport default Showcards;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './rarefilter.css';\n\nclass Rarefilter extends React.Component {\n  render() {\n    const { rarefilter, onInputChange } = this.props;\n    return (\n      <div>\n        <select\n          type=\"checkbox\"\n          data-testid=\"rare-filter\"\n          name=\"rarefilter\"\n          onChange={ onInputChange }\n          value={ rarefilter }\n        >\n          <option>Raridade</option>\n          <option>todas</option>\n          <option>normal</option>\n          <option>raro</option>\n          <option>muito raro</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nRarefilter.propTypes = {\n  rarefilter: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n\nexport default Rarefilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './trunfofilter.css';\n\nclass Trunfofilter extends React.Component {\n  render() {\n    const { trunfofilter, onInputChange } = this.props;\n\n    return (\n      <label\n        className=\"label-container\"\n        htmlFor=\"trunfo-imput\"\n        data-testid=\"trunfo-filter\"\n      >\n        Super Trunfo\n        <input\n          type=\"checkbox\"\n          id=\"trunfo-imput\"\n          name=\"trunfofilter\"\n          onChange={ onInputChange }\n          value={ trunfofilter }\n        />\n      </label>\n    );\n  }\n}\n\nTrunfofilter.propTypes = {\n  trunfofilter: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n\nexport default Trunfofilter;\n","import React from 'react';\nimport Card from './components/Card';\nimport Form from './components/Form';\nimport Namefilter from './components/Namefilter';\n\nimport './app.css';\nimport Showcards from './components/Showcards';\nimport Rarefilter from './components/Rarefilter';\nimport Trunfofilter from './components/Trunfofilter';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      cards: [],\n      namefilter: '',\n      filteredCards: [],\n      rarefilter: '',\n      trunfofilter: false,\n      hasFilered: false,\n    };\n  }\n\n  filledData = () => {\n    const { cardName, cardDescription, cardAttr1, cardAttr2,\n      cardAttr3, cardImage } = this.state;\n\n    const verify = cardName === '' || cardDescription === '' || cardAttr1 === ''\n      || cardAttr2 === '' || cardAttr3 === '' || cardImage === '';\n\n    const n1 = parseInt(cardAttr1, 10);\n    const n2 = parseInt(cardAttr2, 10);\n    const n3 = parseInt(cardAttr3, 10);\n\n    const minValue = 0;\n    const maxValue = 90;\n\n    const verifyValues = n1 >= minValue && n1 <= maxValue\n      && n2 >= minValue && n2 <= maxValue\n      && n3 >= minValue && n3 <= maxValue;\n\n    const maxSum = 210;\n\n    const verifyLength = (n1 + n2 + n3) <= maxSum;\n\n    if (!verify && verifyValues && verifyLength) {\n      return false;\n    }\n    return true;\n  }\n\n  onInputChange = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    }, () => this.filterButton());\n  }\n\n  hasTrunfoVerify = () => {\n    const { cards } = this.state;\n    const verify = cards.some(({ cardTrunfo }) => cardTrunfo);\n\n    this.setState(() => ({\n      hasTrunfo: verify,\n    }));\n  }\n\n  saveNewCard = (event) => {\n    event.preventDefault();\n    const { cardName, cardDescription, cardAttr1, cardAttr2, cardAttr3,\n      cardImage, cardRare, cardTrunfo } = this.state;\n\n    this.setState((before) => ({\n      cards: [...before.cards, {\n        cardName,\n        cardDescription,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardImage,\n        cardRare,\n        cardTrunfo,\n      }],\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n    }), () => this.hasTrunfoVerify());\n  }\n\n  deleteCard = ({ target }) => {\n    const { cards } = this.state;\n    const undeletedCards = cards.filter(({ cardImage }) => cardImage !== target.id);\n    this.setState({ cards: undeletedCards }, () => this.hasTrunfoVerify());\n  }\n\n  showFiltered = (rareFiltered) => {\n    this.setState({ filteredCards: rareFiltered });\n  }\n\n  filterButton =() => {\n    let rareFiltered = [];\n    let nameFiltered = [];\n    let trunfoFiltered = [];\n    const { cards, namefilter, rarefilter, trunfofilter } = this.state;\n\n    if (rarefilter !== '' && rarefilter !== 'Raridade' && rarefilter !== 'todas') {\n      rareFiltered = cards.filter(({ cardRare }) => cardRare === rarefilter);\n      this.setState({ hasFilered: true });\n    } else { rareFiltered = cards; }\n\n    if (namefilter !== '') {\n      nameFiltered = rareFiltered.filter(({ cardName }) => cardName.includes(namefilter));\n      this.setState({ hasFilered: true });\n    } else { nameFiltered = rareFiltered; }\n\n    if (trunfofilter === true) {\n      trunfoFiltered = nameFiltered.filter(({ cardTrunfo }) => cardTrunfo);\n      this.setState({ hasFilered: true });\n    } else { trunfoFiltered = nameFiltered; }\n\n    this.setState({ filteredCards: trunfoFiltered });\n  }\n\n  render() {\n    const { cardName, cardDescription, cardAttr1, cardAttr2, cardAttr3, cardImage,\n      cardRare, cardTrunfo, hasTrunfo, cards, namefilter, filteredCards,\n      rarefilter, trunfofilter, hasFilered } = this.state;\n\n    const isSaveButtonDisabled = this.filledData();\n    const onSaveButtonClick = this.saveNewCard;\n\n    return (\n      <div>\n        <h1 className=\"title\">Tryunfo</h1>\n        <section className=\"first-section-container\">\n          <Form\n            cardName={ cardName }\n            cardDescription={ cardDescription }\n            cardAttr1={ cardAttr1 }\n            cardAttr2={ cardAttr2 }\n            cardAttr3={ cardAttr3 }\n            cardImage={ cardImage }\n            cardRare={ cardRare }\n            cardTrunfo={ cardTrunfo }\n            hasTrunfo={ hasTrunfo }\n            isSaveButtonDisabled={ isSaveButtonDisabled }\n            onInputChange={ this.onInputChange }\n            onSaveButtonClick={ onSaveButtonClick }\n          />\n          <Card\n            cardName={ cardName }\n            cardDescription={ cardDescription }\n            cardAttr1={ cardAttr1 }\n            cardAttr2={ cardAttr2 }\n            cardAttr3={ cardAttr3 }\n            cardImage={ cardImage }\n            cardRare={ cardRare }\n            cardTrunfo={ cardTrunfo }\n            hasTrunfo={ hasTrunfo }\n          />\n        </section>\n        <section className=\"second-section-container\">\n          <div className=\"filters-container\">\n            <h2>Todas as Cartas</h2>\n            <h3>Filtros de Busca</h3>\n            <Namefilter\n              namefilter={ namefilter }\n              onInputChange={ this.onInputChange }\n              filterButton={ this.filterButton }\n            />\n\n            <Rarefilter\n              rarefilter={ rarefilter }\n              onInputChange={ this.onInputChange }\n            />\n            <Trunfofilter\n              trunfofilter={ trunfofilter }\n              onInputChange={ this.onInputChange }\n            />\n          </div>\n          <div className=\"showcards\">\n            <Showcards\n              cards={ (hasFilered) ? filteredCards : cards }\n              deleteCard={ this.deleteCard }\n            />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}